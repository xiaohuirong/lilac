diff --git a/arch/arm64/boot/dts/qcom/sm8150-xiaomi-nabu.dts b/arch/arm64/boot/dts/qcom/sm8150-xiaomi-nabu.dts
index f49f62d8f54f..ab10bc803881 100644
--- a/arch/arm64/boot/dts/qcom/sm8150-xiaomi-nabu.dts
+++ b/arch/arm64/boot/dts/qcom/sm8150-xiaomi-nabu.dts
@@ -505,7 +505,7 @@ ln8000_charger@51 {
 		compatible = "lionsemi,ln8000";
 		reg = <0x51>;
 
-		status = "disabled";
+		status = "okay";
 
 		irq-gpios = <&tlmm 36 0x2002>;
 
@@ -707,7 +707,7 @@ PDO_FIXED_USB_COMM |
 					 PDO_FIXED_DUAL_ROLE |
 					 PDO_FIXED_USB_COMM |
 					 PDO_FIXED_DATA_SWAP)
-					 PDO_VAR(5000, 12000, 3000)>;
+					 PDO_VAR(5000, 9000, 3000)>;
 
 		op-sink-microwatt = <10000000>;
 
diff --git a/drivers/power/supply/ln8000_charger.c b/drivers/power/supply/ln8000_charger.c
index 1eabea38d718..2c60d1fe564c 100644
--- a/drivers/power/supply/ln8000_charger.c
+++ b/drivers/power/supply/ln8000_charger.c
@@ -1566,6 +1566,20 @@ static int ln8000_probe(struct i2c_client *client)
         dev_err(&client->dev, "%s: fail to alloc devm for ln8000_info\n", __func__);
         return -ENOMEM;
     }
+    info->dev = &client->dev;
+    info->client = client;
+
+    info->typec_psy = power_supply_get_by_phandle(info->dev->of_node,"usb-tcpm");
+
+    if(info->typec_psy == NULL){
+	ret = -(EPROBE_DEFER);
+	return ret;
+    }
+    if (IS_ERR(info->typec_psy)) {
+	    ret = PTR_ERR(info->typec_psy);
+	    dev_warn(info->dev, "Failed to get USB Type-C: %d\n", ret);
+	    info->typec_psy = NULL;
+    }
 
     info->pdata = devm_kzalloc(&client->dev, sizeof(struct ln8000_platform_data), GFP_KERNEL);
     if (info->pdata == NULL) {
@@ -1573,8 +1587,6 @@ static int ln8000_probe(struct i2c_client *client)
        kfree(info);
        return -ENOMEM;
     }
-    info->dev = &client->dev;
-    info->client = client;
     ret = ln8000_parse_dt(info);
     if (IS_ERR_VALUE((unsigned long)ret)) {
         ln_err("fail to parsed dt\n");
@@ -1625,14 +1637,6 @@ static int ln8000_probe(struct i2c_client *client)
 
     determine_initial_status(info);
 
-    info->typec_psy = power_supply_get_by_phandle(info->dev->of_node,
-							"usb-tcpm");
-	if (IS_ERR(info->typec_psy)) {
-		ret = PTR_ERR(info->typec_psy);
-		dev_warn(info->dev, "Failed to get USB Type-C: %d\n", ret);
-		info->typec_psy = NULL;
-	}
-
 	if (info->typec_psy) {
 		INIT_DELAYED_WORK(&info->status_changed_work,
 			ln8000_status_changed_worker);
@@ -1759,4 +1763,4 @@ module_i2c_driver(ln8000_driver);
 MODULE_AUTHOR("sungdae choi<sungdae@lionsemi.com>");
 MODULE_DESCRIPTION("LIONSEMI LN8000 charger driver");
 MODULE_LICENSE("GPL v2");
-MODULE_VERSION("0.3.0");
\ No newline at end of file
+MODULE_VERSION("0.3.0");
