diff --git a/metadata/core.xml b/metadata/core.xml
index 54e93dc..cd19a92 100644
--- a/metadata/core.xml
+++ b/metadata/core.xml
@@ -76,5 +76,10 @@
 			<_long>Whether to pass buttons through to the client when switching the focus via clicking</_long>
 			<default>true</default>
 		</option>
+		<option name="only_decorate_gtk" type="bool">
+			<_short>Only decorate GTK apps</_short>
+			<_long>When enabled, only requests client-side decoration for GTK applications.</_long>
+			<default>false</default>
+		</option>
 	</plugin>
 </wayfire>
diff --git a/src/view/view-impl.cpp b/src/view/view-impl.cpp
index f9610db..029cf2b 100644
--- a/src/view/view-impl.cpp
+++ b/src/view/view-impl.cpp
@@ -255,13 +255,15 @@ wlr_surface*wf::wlr_view_t::get_keyboard_focus_surface()
 
 bool wf::wlr_view_t::should_be_decorated()
 {
-    return role == wf::VIEW_ROLE_TOPLEVEL && !has_client_decoration;
+    return role == wf::VIEW_ROLE_TOPLEVEL && (!has_client_decoration || !has_gtk_decoration);
 }
 
 void wf::wlr_view_t::set_decoration_mode(bool use_csd)
 {
     bool was_decorated = should_be_decorated();
     this->has_client_decoration = use_csd;
+    wf::option_wrapper_t<bool> only_gtk ("core/only_decorate_gtk");
+    if (only_gtk == 1) this->has_gtk_decoration = false;
     if ((was_decorated != should_be_decorated()) && is_mapped())
     {
         wf::view_decoration_state_updated_signal data;
diff --git a/src/view/view-impl.hpp b/src/view/view-impl.hpp
index 8f34941..c75d5a3 100644
--- a/src/view/view-impl.hpp
+++ b/src/view/view-impl.hpp
@@ -141,6 +141,7 @@ class wlr_view_t :
     virtual void set_decoration_mode(bool use_csd);
     virtual void set_output(wf::output_t*) override;
     bool has_client_decoration = true;
+    bool has_gtk_decoration = true;
 
   protected:
     std::string title, app_id;
